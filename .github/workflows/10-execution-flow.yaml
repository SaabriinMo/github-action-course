name: 10 - Controlling the Execution Flow

on:
    workflow_dispatch:
        inputs:
            pass_unit_tests:
                type: boolean
                default: false


jobs:
    lint-build:
        runs-on: ubuntu-latest
        steps: 
            - name: Lint and build
              run: echo ""Linting and building project""

    unit-tests:
        runs-on: ubuntu-latest
        # continue-on-error: true -> for pylint, py test (this is not ideal)
        # if this job failed, other downstream jobs are executed
        steps:
            - name: Running unit tests
              run: echo "Running tests..."

            - name: Failing tests
              if: ${{!inputs.pass_unit_tests}}
              run: exit 1

    deploy-nonprod:
        runs-on: ubuntu-latest
        steps:
            - name: print non prod
              run: echo "Deploying to nonprod..."
        needs:
            - lint-build
            - unit-tests

    e2e-tests:
        runs-on: ubuntu-latest
        needs:
            - deploy-nonprod
        steps:
            - name: Running E2E tests
              run: echo "Running E2E tests"


    load-tests:
        runs-on: ubuntu-latest
        needs:
            - deploy-nonprod
        steps:
            - name: Running load tests
              run: echo "Running load tests"

    
    deploy-prod:
        runs-on: ubuntu-latest
        needs:
            - e2e-tests
            - load-tests
        steps:
            - name: Deploying to prod
              run: echo "Deploying to prod..."


    
# to prevent skipped jobs and doing !cancelled() 
